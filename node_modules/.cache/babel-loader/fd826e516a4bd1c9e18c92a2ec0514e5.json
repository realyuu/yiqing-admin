{"remainingRequest":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/dashboard/admin/components/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/dashboard/admin/components/Map.vue","mtime":1617498401474},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/babel.config.js","mtime":1609384492193},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["mixins","name","props","className","type","default","width","height","title","data","value","watch","val","oldVal","echart","option","mouse_position","beginX","beginY","endX","endY","placeType","province","code","city","geoCoordMap","methods","cityIsInclude","provinceEngName","cityName","cityNameEng","convertData","res","setMapOption","text","left","textStyle","color","backgroundColor","tooltip","trigger","legend","show","orient","y","x","icon","formatter","geo","map","center","aspectScale","scaleLimit","min","max","label","emphasis","roam","itemStyle","normal","areaColor","borderColor","series","coordinateSystem","encode","symbolSize","position","slice","showEffectOn","effectType","rippleEffect","period","scale","brushType","hoverAnimation","zlevel","mousedown","e","mouseup","isdrag","x1","y1","x2","y2","clickOther","provinceNameChineseToEng","chinaConfigure","window","event","alert","Object","setProvinceMap","geometryProvince","console","echarts","catch","setCityMap","geometryCouties","mounted","created","beforeDestroy"],"sourceRoot":"src/views/dashboard/admin/components","sources":["Map.vue"],"sourcesContent":["<template>\n  <div id=\"\">\n    <div :class=\"className\" :style=\"{height:height,width:width}\"  ref=\"myEchart\" @click.stop=\"clickOther()\" @mousedown=\"mousedown\" @mouseup=\"mouseup\"></div>\n  </div>\n</template>\n\n<script>\n  import  * as echarts from \"echarts\"\n  import resize from './mixins/resize'\n  import {geometryCouties,geometryProvince} from '@/api/chart'\n  import 'echarts/map/js/china.js';\n  import {provinceNameArr, cityNameData, provinceNameChineseToEng, cityNameChineseToEng} from '@/lib/geoNameDictionary.js'; // 引入省市对应英文名字\n\n  export default {\n    mixins: [resize],\n    name: 'Map',\n    props: {\n      className: {\n        type: String,\n        default: 'chart'\n      },\n      width: {\n        type: String,\n        default: '100%'\n      },\n      height: {\n        type: String,\n        default: '650px'\n      },\n      title: {\n        type: String,\n        default: '中药产地分布图'\n      },\n      data:{\n        type: Array,\n        default: function() {\n          return [\n          {name: \"长沙\", value: 190},\n          {name: '衢州', value: 177},\n          {name: '廊坊', value: 193},\n          {name: '菏泽', value: 194},\n          {name: '合肥', value: 229},\n          {name: '武汉', value: 273},\n          {name: '大庆', value: 279}\n        ]}\n      }\n    },\n    watch:{\n      data(val, oldVal){//普通的watch监听\n        // console.log(\"watch\")\n        // console.log(val);\n        if(val!=oldVal)\n          this.chinaConfigure()\n      },\n    },\n    data() {\n      return {\n        echart: null,\n\n        // echart地图的配置项\n        option: {},\n\n        // 地图拖动起止位置（用于拖动不触发返回事件）\n        mouse_position: {\n          beginX: '',\n          beginY: '',\n          endX: '',\n          endY: '',\n        },\n\n        // 地区类型：country, province, city\n        placeType: 'country',\n        // 当前省\n        province: {\n          name: '',\n          code: '',\n        },\n        // 当前市\n        city: {\n          name: '',\n          code: '',\n        },\n        geoCoordMap: {\n          '海门':[121.15,31.89],\n          '鄂尔多斯':[109.781327,39.608266],\n          '招远':[120.38,37.35],\n          '舟山':[122.207216,29.985295],\n          '齐齐哈尔':[123.97,47.33],\n          '盐城':[120.13,33.38],\n          '赤峰':[118.87,42.28],\n          '青岛':[120.33,36.07],\n          '乳山':[121.52,36.89],\n          '金昌':[102.188043,38.520089],\n          '泉州':[118.58,24.93],\n          '莱西':[120.53,36.86],\n          '日照':[119.46,35.42],\n          '胶南':[119.97,35.88],\n          '南通':[121.05,32.08],\n          '拉萨':[91.11,29.97],\n          '云浮':[112.02,22.93],\n          '梅州':[116.1,24.55],\n          '文登':[122.05,37.2],\n          '上海':[121.48,31.22],\n          '攀枝花':[101.718637,26.582347],\n          '威海':[122.1,37.5],\n          '承德':[117.93,40.97],\n          '厦门':[118.1,24.46],\n          '汕尾':[115.375279,22.786211],\n          '潮州':[116.63,23.68],\n          '丹东':[124.37,40.13],\n          '太仓':[121.1,31.45],\n          '曲靖':[103.79,25.51],\n          '烟台':[121.39,37.52],\n          '福州':[119.3,26.08],\n          '瓦房店':[121.979603,39.627114],\n          '即墨':[120.45,36.38],\n          '抚顺':[123.97,41.97],\n          '玉溪':[102.52,24.35],\n          '张家口':[114.87,40.82],\n          '阳泉':[113.57,37.85],\n          '莱州':[119.942327,37.177017],\n          '湖州':[120.1,30.86],\n          '汕头':[116.69,23.39],\n          '昆山':[120.95,31.39],\n          '宁波':[121.56,29.86],\n          '湛江':[110.359377,21.270708],\n          '揭阳':[116.35,23.55],\n          '荣成':[122.41,37.16],\n          '连云港':[119.16,34.59],\n          '葫芦岛':[120.836932,40.711052],\n          '常熟':[120.74,31.64],\n          '东莞':[113.75,23.04],\n          '河源':[114.68,23.73],\n          '淮安':[119.15,33.5],\n          '泰州':[119.9,32.49],\n          '南宁':[108.33,22.84],\n          '营口':[122.18,40.65],\n          '惠州':[114.4,23.09],\n          '江阴':[120.26,31.91],\n          '蓬莱':[120.75,37.8],\n          '韶关':[113.62,24.84],\n          '嘉峪关':[98.289152,39.77313],\n          '广州':[113.23,23.16],\n          '延安':[109.47,36.6],\n          '太原':[112.53,37.87],\n          '清远':[113.01,23.7],\n          '中山':[113.38,22.52],\n          '昆明':[102.73,25.04],\n          '寿光':[118.73,36.86],\n          '盘锦':[122.070714,41.119997],\n          '长治':[113.08,36.18],\n          '深圳':[114.07,22.62],\n          '珠海':[113.52,22.3],\n          '宿迁':[118.3,33.96],\n          '咸阳':[108.72,34.36],\n          '铜川':[109.11,35.09],\n          '平度':[119.97,36.77],\n          '佛山':[113.11,23.05],\n          '海口':[110.35,20.02],\n          '江门':[113.06,22.61],\n          '章丘':[117.53,36.72],\n          '肇庆':[112.44,23.05],\n          '大连':[121.62,38.92],\n          '临汾':[111.5,36.08],\n          '吴江':[120.63,31.16],\n          '石嘴山':[106.39,39.04],\n          '沈阳':[123.38,41.8],\n          '苏州':[120.62,31.32],\n          '茂名':[110.88,21.68],\n          '嘉兴':[120.76,30.77],\n          '长春':[125.35,43.88],\n          '胶州':[120.03336,36.264622],\n          '银川':[106.27,38.47],\n          '张家港':[120.555821,31.875428],\n          '三门峡':[111.19,34.76],\n          '锦州':[121.15,41.13],\n          '南昌':[115.89,28.68],\n          '柳州':[109.4,24.33],\n          '三亚':[109.511909,18.252847],\n          '自贡':[104.778442,29.33903],\n          '吉林':[126.57,43.87],\n          '阳江':[111.95,21.85],\n          '泸州':[105.39,28.91],\n          '西宁':[101.74,36.56],\n          '宜宾':[104.56,29.77],\n          '呼和浩特':[111.65,40.82],\n          '成都':[104.06,30.67],\n          '大同':[113.3,40.12],\n          '镇江':[119.44,32.2],\n          '桂林':[110.28,25.29],\n          '张家界':[110.479191,29.117096],\n          '宜兴':[119.82,31.36],\n          '北海':[109.12,21.49],\n          '西安':[108.95,34.27],\n          '金坛':[119.56,31.74],\n          '东营':[118.49,37.46],\n          '牡丹江':[129.58,44.6],\n          '遵义':[106.9,27.7],\n          '绍兴':[120.58,30.01],\n          '扬州':[119.42,32.39],\n          '常州':[119.95,31.79],\n          '潍坊':[119.1,36.62],\n          '重庆':[106.54,29.59],\n          '台州':[121.420757,28.656386],\n          '南京':[118.78,32.04],\n          '滨州':[118.03,37.36],\n          '贵阳':[106.71,26.57],\n          '无锡':[120.29,31.59],\n          '本溪':[123.73,41.3],\n          '克拉玛依':[84.77,45.59],\n          '渭南':[109.5,34.52],\n          '马鞍山':[118.48,31.56],\n          '宝鸡':[107.15,34.38],\n          '焦作':[113.21,35.24],\n          '句容':[119.16,31.95],\n          '北京':[116.46,39.92],\n          '徐州':[117.2,34.26],\n          '衡水':[115.72,37.72],\n          '包头':[110,40.58],\n          '绵阳':[104.73,31.48],\n          '乌鲁木齐':[87.68,43.77],\n          '枣庄':[117.57,34.86],\n          '杭州':[120.19,30.26],\n          '淄博':[118.05,36.78],\n          '鞍山':[122.85,41.12],\n          '溧阳':[119.48,31.43],\n          '库尔勒':[86.06,41.68],\n          '安阳':[114.35,36.1],\n          '开封':[114.35,34.79],\n          '济南':[117,36.65],\n          '德阳':[104.37,31.13],\n          '温州':[120.65,28.01],\n          '九江':[115.97,29.71],\n          '邯郸':[114.47,36.6],\n          '临安':[119.72,30.23],\n          '兰州':[103.73,36.03],\n          '沧州':[116.83,38.33],\n          '临沂':[118.35,35.05],\n          '南充':[106.110698,30.837793],\n          '天津':[117.2,39.13],\n          '富阳':[119.95,30.07],\n          '泰安':[117.13,36.18],\n          '诸暨':[120.23,29.71],\n          '郑州':[113.65,34.76],\n          '哈尔滨':[126.63,45.75],\n          '聊城':[115.97,36.45],\n          '芜湖':[118.38,31.33],\n          '唐山':[118.02,39.63],\n          '平顶山':[113.29,33.75],\n          '邢台':[114.48,37.05],\n          '德州':[116.29,37.45],\n          '济宁':[116.59,35.38],\n          '荆州':[112.239741,30.335165],\n          '宜昌':[111.3,30.7],\n          '义乌':[120.06,29.32],\n          '丽水':[119.92,28.45],\n          '洛阳':[112.44,34.7],\n          '秦皇岛':[119.57,39.95],\n          '株洲':[113.16,27.83],\n          '石家庄':[114.48,38.03],\n          '莱芜':[117.67,36.19],\n          '常德':[111.69,29.05],\n          '保定':[115.48,38.85],\n          '湘潭':[112.91,27.87],\n          '金华':[119.64,29.12],\n          '岳阳':[113.09,29.37],\n          '长沙':[113,28.21],\n          '衢州':[118.88,28.97],\n          '廊坊':[116.7,39.53],\n          '菏泽':[115.480656,35.23375],\n          '合肥':[117.27,31.86],\n          '武汉':[114.31,30.52],\n          '大庆':[125.03,46.58]\n        },\n      }\n    },\n    methods: {\n      // 判断一个城市是否在这个省内\n      cityIsInclude(provinceEngName, cityName, cityNameEng) {\n        let cities = cityNameData[`cityName_${provinceEngName}`]\n        for (let city in cities) {\n          if ((!cityNameEng && city.indexOf(cityName) !== -1) || (cityNameEng && city.indexOf(cityName) !== -1 && cities[city] === cityNameEng)) {\n            return true\n          }\n        }\n        return false\n      },\n\n      // 将data在坐标点上展示，同时在省市情况下，过滤掉范围外的点\n      convertData(data, provinceEngName, cityNameEng) {\n        var res = [];\n        for (var i = 0; i < data.length; i++) {\n          if (provinceEngName) {\n            let ret = this.cityIsInclude(provinceEngName, data[i].name, cityNameEng)\n            if (ret) {\n              var geoCoord = this.geoCoordMap[data[i].name]\n              if (geoCoord) {\n                res.push({\n                  name: data[i].name,\n                  value: geoCoord.concat(data[i].value)\n                })\n              }\n            }\n          } else {\n            let geoCoord = this.geoCoordMap[data[i].name];\n            if (geoCoord) {\n              res.push({\n                name: data[i].name,\n                value: geoCoord.concat(data[i].value)\n              });\n            }\n          }\n        }\n        // console.log(res)\n        return res;\n      },\n\n      // 设置地图的option配置项\n      setMapOption(place = 'china', center = undefined) {\n        this.option = {\n          title: {\n            text: this.title,\n            left: 'center',\n            textStyle: {\n              color: '#fff'\n            }\n          },\n          // backgroundColor: \"rgb(42,49,90)\",\n          backgroundColor: \"rgb(100,100,100)\",\n          tooltip : { // 鼠标移到图里面的浮动提示框\n            trigger: 'item'\n          },\n          // 图例\n          legend: {\n            show: true,\n            orient: 'vertical', // 排序方式\n            y: 'bottom', // y轴位置\n            x:'right', // x轴位置\n            data:['中药药材', 'Top 5'], // 图例的数据数组，对应series中的name\n            textStyle: { // 文字样式\n              color: '#fff'\n            },\n            icon: 'rect',\n            formatter: ``,\n          },\n          geo: {\n            map: place,\n            center: center,\n            aspectScale: 0.75, // 地图长宽比\n            scaleLimit: { // 放大缩小最大比例限制\n              min: 0.8,\n              max: 3,\n            },\n            label: {\n              emphasis: {\n                show: false\n              }\n            },\n            roam: true,\n            itemStyle: {\n              normal: {\n                areaColor: 'rgb(227,240,227)',\n                borderColor: '#111'\n              },\n              emphasis: {\n                show: true,\n                areaColor: 'rgb(106,204,100)',\n              }\n            },\n            // emphasis: {\n            //   show: false,\n            // },\n          },\n          series: [\n            {\n              name: '',\n              type: 'scatter',\n              coordinateSystem: 'geo',\n              data: this.convertData(this.data),\n              encode: {\n                value: 2\n              },\n              symbolSize: 8,\n              label: {\n                normal: {\n                  position: 'right',\n                  show: false\n                },\n                emphasis: {\n                  formatter: '{b}',\n                  show: false\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: '#00CF8B'\n                }\n              }\n            },\n            {\n              name: this.title,\n              type: 'effectScatter',\n              coordinateSystem: 'geo',\n              data: this.convertData(this.data.sort(function (a, b) {\n                return b.value - a.value;\n              }).slice(0, 5)),\n              encode: {\n                value: 2\n              },\n              symbolSize: 8,\n              showEffectOn: 'render', // 何时显示特效\n              effectType: 'ripple', // 特效类型，暂时只有涟漪类型\n              rippleEffect: {\n                period: 6,\n                scale: 8,\n                brushType: 'stroke'\n              },\n              hoverAnimation: true,\n              // label: {\n              //   normal: {\n              //     formatter: '{b}',\n              //     position: 'right',\n              //     show: true\n              //   }\n              // },\n              itemStyle: {\n                normal: {\n                  color: '#00CF8B',\n                  // shadowBlur: 10,\n                  // shadowColor: '#333'\n                }\n              },\n              zlevel: 1\n            }\n          ]\n        };\n      },\n\n      // 鼠标拖动事件（使拖动不触发返回事件）\n      mousedown(e) {\n        this.mouse_position.beginX = e.clientX;\n        this.mouse_position.beginY = e.clientY;\n      },\n      mouseup(e) {\n        this.mouse_position.endX = e.clientX;\n        this.mouse_position.endY = e.clientY;\n      },\n\n      // 判断是否拖动，当前允许存在4px误差\n      isdrag(x1,y1,x2,y2) {\n        if(Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)) <= 4) {\n          return false;\n        }\n        return true;\n      },\n\n      // 点击其他区域，返回上一页\n      clickOther() {\n        // console.log(this.mouse_position);\n\n        if (!this.isdrag(this.mouse_position.beginX, this.mouse_position.beginY, this.mouse_position.endX, this.mouse_position.endY)) {\n          if (this.placeType == 'city' && this.province.name) {\n            // 从市返回省\n            this.placeType = 'province';\n            this.city.code = '';\n            this.city.name = '';\n            this.setMapOption(this.province.name);\n            this.option.series[0].data = this.convertData(this.data, provinceNameChineseToEng(this.province.name));\n            this.option.series[1].data = this.convertData(this.data.sort(function (a, b) {\n              return b.value - a.value;\n            }).slice(0, 5), provinceNameChineseToEng(this.province.name));\n            this.echart.setOption(this.option);\n          } else if (this.placeType == 'province') {\n            // 从省返回国家\n            this.placeType = 'country';\n            this.province.code = '';\n            this.province.name = '';\n            this.city.code = '';\n            this.city.name = '';\n            this.setMapOption();\n            this.echart.setOption(this.option);\n          }\n        }\n      },\n\n      // 渲染echart地图\n      chinaConfigure() {\n        // console.log(this.userJson)\n        // console.log(this.mapData)\n\n        this.echart = echarts.init(this.$refs.myEchart); //这里是为了获得容器所在位置\n        window.onresize = this.echart.resize;\n        // echart配置项\n        this.setMapOption();\n        this.echart.setOption(this.option);\n\n        // 点击事件\n        // 使用剪头函数，函数内部的this会指向调用函数时的this，而不是函数体内\n        this.echart.on('click',  (params) => {\n          event.stopPropagation(); // 阻止冒泡\n          // console.log(params);\n\n          if (params.componentType === 'series') {\n            // 点击了单个停车场， 跳转停车场详情\n            alert('跳转详情页');\n            return;\n          }\n\n          // 对点击的省或者市做不同的处理\n          let province = provinceNameArr.find(item => item.chineseName === params.name);\n          // console.log(province, this.placeType);\n          if (this.placeType === 'country' && province) {\n            // 点击了省\n\n            // if (province.code.length == '6') {\n              // 如果是直辖市，香港澳门台湾，则直接当成省级，进入渲染市级\n              // this.setCityMap(province.chineseName, province.code)\n            // } else {\n              this.setProvinceMap(province.chineseName, province.code);\n            // }\n\n          } else if (this.placeType === 'province'\n            // Object.keys(obj) --> 能够遍历出该对象所有的key，输出所有key的一个集合; 同理Object.values(obj)输入对象的value集合\n            && Object.keys(cityNameData[`cityName_${provinceNameChineseToEng(this.province.name)}`]).find(item => item === params.name)\n          ) {\n            // 点击了市，跳转到该市\n            // console.log(this.province.name);\n            // console.log(provinceNameChineseToEng(this.province.name));\n            // console.log(`cityName_${provinceNameChineseToEng(this.province.name)}`);\n            // console.log(Object.keys(cityNameData[`cityName_${provinceNameChineseToEng(this.province.name)}`]).find(item => item === params.name));\n            let cityCode = cityNameData[`cityName_${provinceNameChineseToEng(this.province.name)}`][params.name];\n\n            this.setCityMap(params.name, cityCode);\n\n          } else if (this.placeType === 'city') {\n            // 点击县，不做处理\n          } else if (this.placeType === 'province' && !cityNameData[`cityName_${provinceNameChineseToEng(this.province.name)}`]) {\n            // 点击直辖市、香港澳门台湾的内部，不做处理\n          } else {\n            alert('地图资源错误，请联系管理员!');\n          }\n\n        })\n      },\n\n      // 设置省份地图\n      setProvinceMap(name, code) {\n        geometryProvince(code).then(res => {\n          this.placeType = 'province';\n          this.province.name = name;\n          this.province.code = code;\n          // this.setMapOption(name, res.data.cp);\n          console.log(res)\n          console.log(this.data)\n          this.setMapOption(name, res.cp);\n          this.option.series[0].data = this.convertData(this.data, provinceNameChineseToEng(name));\n          this.option.series[1].data = this.convertData(this.data.sort(function (a, b) {\n            return b.value - a.value;\n          }).slice(0, 5), provinceNameChineseToEng(name));\n          // echarts.registerMap(name, res.data);\n          echarts.registerMap(name, res);\n          this.echart.setOption(this.option);\n        }).catch(err => {\n          console.log(err)\n          alert('地图资源错误，请联系管理员!');\n        })\n      },\n\n      // 设置城市地图\n      setCityMap(name, code) {\n        geometryCouties(code).then(res => {\n          this.placeType = 'city';\n          this.city.name = name;\n          this.city.code = code;\n          // this.setMapOption(name, res.data.cp);\n          this.setMapOption(name, res.cp);\n          this.option.series[0].data = this.convertData(this.data, provinceNameChineseToEng(this.province.name), code);\n          this.option.series[1].data = this.convertData(this.data.sort(function (a, b) {\n            return b.value - a.value;\n          }).slice(0, 5), provinceNameChineseToEng(this.province.name), code);\n          // echarts.registerMap(name, res.data);\n          echarts.registerMap(name, res);\n          this.echart.setOption(this.option);\n        }).catch(err => {\n          console.log(err)\n          alert('地图资源错误，请联系管理员!');\n        })\n      },\n    },\n\n    mounted() {\n      this.chinaConfigure();\n    },\n    created() {\n\n    },\n    beforeDestroy() {\n      if (!this.echart) {\n        return;\n      }\n      this.echart.dispose();\n      this.echart = null;\n    },\n  }\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}
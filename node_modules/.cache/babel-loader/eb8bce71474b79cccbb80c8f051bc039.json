{"remainingRequest":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--14-0!/Users/songyu/IdeaProjects/yiqing-admin-1/src/permission.js","dependencies":[{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/src/permission.js","mtime":1619357886254},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/babel.config.js","mtime":1609384492193},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3Nvbmd5dS9JZGVhUHJvamVjdHMveWlxaW5nLWFkbWluLTEvbm9kZV9tb2R1bGVzL19AYmFiZWxfcnVudGltZUA3LjE3LjJAQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvc29uZ3l1L0lkZWFQcm9qZWN0cy95aXFpbmctYWRtaW4tMS9ub2RlX21vZHVsZXMvX0BiYWJlbF9ydW50aW1lQDcuMTcuMkBAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC11aSc7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyCgppbXBvcnQgJ25wcm9ncmVzcy9ucHJvZ3Jlc3MuY3NzJzsKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOwppbXBvcnQgZ2V0UGFnZVRpdGxlIGZyb20gIkAvdXRpbHMvZ2V0LXBhZ2UtdGl0bGUiOyAvLyBwcm9ncmVzcyBiYXIgc3R5bGUKCk5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCnZhciB3aGl0ZUxpc3QgPSBbJy9sb2dpbicsICcvYXV0aC1yZWRpcmVjdCddOyAvL+S4uuWVpei/memHjOimgeWKoGFzeW5jID8/Cgpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh0bywgZnJvbSwgbmV4dCkgewogICAgdmFyIGhhc1Rva2VuLCBoYXNSb2xlcywgX3lpZWxkJHN0b3JlJGRpc3BhdGNoLCByb2xlcywgYWNjZXNzUm91dGVzOwoKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgTlByb2dyZXNzLnN0YXJ0KCk7CiAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gZ2V0UGFnZVRpdGxlKHRvLm1ldGEudGl0bGUpOwogICAgICAgICAgICBoYXNUb2tlbiA9IGdldFRva2VuKCk7CgogICAgICAgICAgICBpZiAoIWhhc1Rva2VuKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQwOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjb25zb2xlLmxvZygnaGFzVG9rZW4gPT4nICsgdG8ucGF0aCk7IC8vIGlmIGlzIGxvZ2dlZCBpbiwgcmVkaXJlY3QgdG8gdGhlIGhvbWUgcGFnZQoKICAgICAgICAgICAgaWYgKCEodG8ucGF0aCA9PT0gJy9sb2dpbicpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICBwYXRoOiAnLycKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgaGFzUm9sZXMgPSBzdG9yZS5nZXR0ZXJzLnJvbGVzICYmIHN0b3JlLmdldHRlcnMucm9sZXMubGVuZ3RoID4gMDsKCiAgICAgICAgICAgIGlmICghaGFzUm9sZXMpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdoYXNSb2xlcyA9PicpOwogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE2OwogICAgICAgICAgICBjb25zb2xlLmxvZygiaGFzIG5vIFJvbGVzLGdldCByb2xlcyBiZWdpbiA9PiAiKTsgLy/ojrflj5bnlKjmiLfop5LoibIKCiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyMDsKICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCd1c2VyL2dldEluZm8nKTsKCiAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICBfeWllbGQkc3RvcmUkZGlzcGF0Y2ggPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByb2xlcyA9IF95aWVsZCRzdG9yZSRkaXNwYXRjaC5yb2xlczsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3JvbGVzJywgcm9sZXMpOyAvL+WfuuS6juinkuiJsueUn+aIkOWPr+S7peiuv+mXrueahOi3r+eUsW1hcAoKICAgICAgICAgICAgY29uc29sZS5sb2coJ0dlbmVyYXRlUm91dGVzID0+ICcpOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjY7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgncGVybWlzc2lvbi9nZW5lcmF0ZVJvdXRlczInLCByb2xlcyk7CgogICAgICAgICAgY2FzZSAyNjoKICAgICAgICAgICAgYWNjZXNzUm91dGVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgLy/liqjmgIHliqDlhaXot6/nlLEKICAgICAgICAgICAgcm91dGVyLmFkZFJvdXRlcyhhY2Nlc3NSb3V0ZXMpOyAvLy4uLuaYr+aJgOiwk2hhY2sgbWV0aG9kIO+8jOehruS/nWFkZFJvdXRlc+eahOaTjeS9nOW3sue7j+WujOaIkAogICAgICAgICAgICAvL3JlcGxhY2Xmk43kvZzkvb/lvpflr7zoiKrkuI3kvJrluKbmnInljoblj7LorrDlvZUKCiAgICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgICAgcmVwbGFjZTogdHJ1ZQogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzODsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAzMToKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDMxOwogICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDE2KTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM1OwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpOwoKICAgICAgICAgIGNhc2UgMzU6CiAgICAgICAgICAgIE1lc3NhZ2UuZXJyb3IoX2NvbnRleHQudDAgfHwgJ0hhcyBFcnJvcicpOwogICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwoKICAgICAgICAgIGNhc2UgMzg6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0MTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA0MDoKICAgICAgICAgICAgLyogaGFzIG5vIHRva2VuICovCiAgICAgICAgICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgICAgICAgICAvLyBpbiB0aGUgZnJlZSBsb2dpbiB3aGl0ZWxpc3QsIGdvIGRpcmVjdGx5CiAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIHJlZGlyZWN0IHRvIGxvZ2luIHBhZ2UKICAgICAgICAgICAgICBuZXh0KCIvbG9naW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICBjYXNlIDQxOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMTYsIDMxXV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKTsKcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAoKSB7CiAgTlByb2dyZXNzLmRvbmUoKTsKfSk7"},{"version":3,"sources":["/Users/songyu/IdeaProjects/yiqing-admin-1/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","console","log","path","done","hasRoles","getters","roles","length","dispatch","accessRoutes","addRoutes","replace","error","indexOf","afterEach"],"mappings":"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","sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress' // progress bar\r\nimport 'nprogress/nprogress.css'\r\nimport { getToken } from '@/utils/auth'\r\nimport getPageTitle from \"@/utils/get-page-title\"; // progress bar style\r\n\r\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\r\n\r\nconst whiteList = ['/login','/auth-redirect']\r\n\r\n//为啥这里要加async ??\r\nrouter.beforeEach(async(to, from, next) =>{\r\n    NProgress.start()\r\n    document.title = getPageTitle(to.meta.title)\r\n    const hasToken = getToken()\r\n    if(hasToken){\r\n        console.log('hasToken =>' + to.path)\r\n        // if is logged in, redirect to the home page\r\n        if(to.path === '/login'){\r\n            next({path:'/'})\r\n            NProgress.done()\r\n        }else{\r\n            const hasRoles = store.getters.roles && store.getters.roles.length > 0\r\n            if(hasRoles){\r\n                console.log('hasRoles =>')\r\n                next()\r\n            }else{\r\n               try{\r\n                 console.log(\"has no Roles,get roles begin => \")\r\n                 //获取用户角色\r\n                 const {roles} = await store.dispatch('user/getInfo')\r\n                 console.log('roles', roles)\r\n                 //基于角色生成可以访问的路由map\r\n                 console.log('GenerateRoutes => ')\r\n                 const accessRoutes = await store.dispatch('permission/generateRoutes2', roles)\r\n                 //动态加入路由\r\n                 router.addRoutes(accessRoutes)\r\n                 //...是所谓hack method ，确保addRoutes的操作已经完成\r\n                 //replace操作使得导航不会带有历史记录\r\n                 next({...to, replace: true})\r\n               }catch(error){\r\n                await store.dispatch('user/resetToken')\r\n                 Message.error(error|| 'Has Error')\r\n                 next(`/login?redirect=${to.path}`)\r\n                 NProgress.done()\r\n               }\r\n            }\r\n        }\r\n    }else{\r\n        /* has no token */\r\n        if(whiteList.indexOf(to.path) !== -1){\r\n            // in the free login whitelist, go directly\r\n            next()\r\n        }else{\r\n            // redirect to login page\r\n            next(`/login?redirect=${to.path}`)\r\n            NProgress.done()\r\n        }\r\n    }\r\n})\r\n\r\nrouter.afterEach(()=>{\r\n    NProgress.done()\r\n})\r\n"]}]}
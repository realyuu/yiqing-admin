{"remainingRequest":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/songyu/IdeaProjects/yiqing-admin-1/src/components/TagsCloud/tagsCloud.vue?vue&type=style&index=0&id=2152ee69&scoped=true&lang=scss&","dependencies":[{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/src/components/TagsCloud/tagsCloud.vue","mtime":1611829262982},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_sass-loader@10.2.1@sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhZ3NDbG91ZCB7Cglwb3NpdGlvbjogcmVsYXRpdmU7CglkaXNwbGF5OiBpbmxpbmUtYmxvY2s7ICAgLy/kuLrkuoblsYXkuK3kv67mlLnkuobvvIzljp/lsZ7mgKfmmK8gYmxvY2sKCW1heC13aWR0aDogMTAwJTsKfQouaXRlbSB7Cglwb3NpdGlvbjogYWJzb2x1dGU7CgljdXJzb3I6IHBvaW50ZXI7Cgl0ZXh0LWFsaWduOiBjZW50ZXI7Cgl0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKCWJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OwoJb3V0bGluZTogbm9uZTsKCSY6aG92ZXIgewoJCWJvcmRlcjogMnB4IHNvbGlkICM2NjY7Cgl9Cn0K"},{"version":3,"sources":["tagsCloud.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tagsCloud.vue","sourceRoot":"src/components/TagsCloud","sourcesContent":["<template>\n\t<div class=\"page\">\n\t\t<div class=\"tagsCloud\" :style=\"{ height: boxWidth + 'px', width: boxWidth + 'px' }\" ref=\"Panel\" @mousemove=\"listener($event)\">\n\t\t\t<div\n\t\t\t\tclass=\"item\"\n\t\t\t\tv-for=\"(item, index) in useArray\"\n\t\t\t\t:key=\"index\"\n\t\t\t\t:style=\"[\n\t\t\t\t\t{ opacity: (400 + item.z) / 600 },\n\t\t\t\t\t{ 'font-size': 12 * (600 / (400 - item.z)) + 'px' },\n\t\t\t\t\t{ left: item.x + 'px' },\n\t\t\t\t\t{ top: item.y + 'px' },\n\t\t\t\t\t{ zIndex: item.zindexVal },\n\t\t\t\t\t{ display: 'inline-block' },\n\t\t\t\t\t{ color: item.rcolor }\n\t\t\t\t]\"\n\t\t\t\t@click=\"toUrl(item.url)\"\n\t\t\t>\n\t\t\t\t{{ item.name }}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport Vue from 'vue';\nexport default {\n\tprops: ['useArray', 'boxWidth', 'speed', 'randomColor'],\n\n\tdata() {\n\t\treturn {\n\t\t\tspeedX: Math.PI / this.speed,\n\t\t\tspeedY: Math.PI / this.speed\n\t\t};\n\t},\n\tcomputed: {\n\t\tradius() {\n\t\t\treturn this.boxWidth / 3;\n\t\t},\n\t\tCX() {\n\t\t\t//球心x坐标\n\t\t\treturn this.boxWidth / 2;\n\t\t},\n\t\tCY() {\n\t\t\t//球心y坐标\n\t\t\treturn this.boxWidth / 2;\n\t\t},\n\t\tEX() {\n\t\t\treturn this.boxWidth + document.body.scrollLeft + document.documentElement.scrollLeft;\n\t\t},\n\t\tEY() {\n\t\t\treturn this.boxWidth + document.body.scrollTop + document.documentElement.scrollTop;\n\t\t}\n\t},\n\tcreated() {\n\t\tthis.init();\n\t},\n\tmounted() {\n\t\t//使球开始旋转\n\t\tsetInterval(() => {\n\t\t\tthis.rotateX();\n\t\t\tthis.rotateY();\n\t\t}, 10);\n\t},\n\tmethods: {\n\t\tinit() {\n\t\t\tlet winWidth = document.body.clientWidth;\n\t\t\tif (this.boxWidth > winWidth) {\n\t\t\t\tthis.boxWidth = winWidth;\n\t\t\t}\n\t\t\tthis.useArray.forEach((item, key) => {\n\t\t\t\tlet k = -1 + (2 * (key + 1) - 1) / this.useArray.length;\n\t\t\t\tlet a = Math.acos(k);\n\t\t\t\tlet b = a * Math.sqrt(this.useArray.length * Math.PI);\n\n\t\t\t\t// X,Y,Z\n\t\t\t\tVue.set(item, 'x', this.radius * Math.sin(a) * Math.cos(b) + this.CX);\n\t\t\t\tVue.set(item, 'y', this.radius * Math.sin(a) * Math.sin(b) + this.CX);\n\t\t\t\tVue.set(item, 'z', this.radius * Math.cos(a));\n\n\t\t\t\t// 随机色\n\t\t\t\tif (this.randomColor) {\n\t\t\t\t\tVue.set(item, 'rcolor', 'rgb(' + parseInt(Math.random() * 255) + ',' + parseInt(Math.random() * 255) + ',' + parseInt(Math.random() * 255) + ')');\n\t\t\t\t}\n\n\t\t\t\t// Z-index\n\t\t\t\tlet scale = this.boxWidth / (this.boxWidth - item.z);\n\t\t\t\tVue.set(item, 'zindexVal', parseInt(scale * 100));\n\t\t\t});\n\t\t},\n\t\trotateX() {\n\t\t\tvar cos = Math.cos(this.speedX);\n\t\t\tvar sin = Math.sin(this.speedX);\n\t\t\t// for (let tag of this.useArray) {\n\t\t\t// \tvar y1 = (tag.y - this.CY) * cos - tag.z * sin + this.CY;\n\t\t\t// \tvar z1 = tag.z * cos + (tag.y - this.CY) * sin;\n\t\t\t// \ttag.y = y1;\n\t\t\t// \ttag.z = z1;\n\t\t\t// }\n\t\t\tthis.useArray.forEach((item, key) => {\n\t\t\t\tvar y1 = (item.y - this.CY) * cos - item.z * sin + this.CY;\n\t\t\t\tvar z1 = item.z * cos + (item.y - this.CY) * sin;\n\t\t\t\titem.y = y1;\n\t\t\t\titem.z = z1;\n\n\t\t\t\tlet scale = this.boxWidth / (this.boxWidth - item.z);\n\t\t\t\titem.zindexVal = parseInt(scale * 100);\n\t\t\t});\n\t\t},\n\t\trotateY() {\n\t\t\tvar cos = Math.cos(this.speedY);\n\t\t\tvar sin = Math.sin(this.speedY);\n\t\t\tthis.useArray.forEach(item => {\n\t\t\t\tvar x1 = (item.x - this.CX) * cos - item.z * sin + this.CX;\n\t\t\t\tvar z1 = item.z * cos + (item.x - this.CX) * sin;\n\t\t\t\titem.x = x1;\n\t\t\t\titem.z = z1;\n\n\t\t\t\tlet scale = this.boxWidth / (this.boxWidth - item.z);\n\t\t\t\titem.zindexVal = parseInt(scale * 100);\n\t\t\t});\n\t\t},\n\t\tlistener(event) {\n\t\t\t//响应鼠标移动\n\t\t\tvar refX = this.$refs.Panel.offsetLeft;\n\t\t\tvar refY = this.$refs.Panel.offsetTop;\n\t\t\tvar x = event.clientX - refX - this.CX;\n\t\t\tvar y = event.clientY - refY - this.CY;\n\n\t\t\t// this.x + CX - this.ele.offsetWidth/2 +\"px\";\n\t\t\tthis.speedY = x * 0.0001 > 0 ? Math.min(this.radius * 0.00002, x * 0.0001) : Math.max(-this.radius * 0.00002, x * 0.0001);\n\t\t\tthis.speedX = y * 0.0001 > 0 ? Math.min(this.radius * 0.00002, y * 0.0001) : Math.max(-this.radius * 0.00002, y * 0.0001);\n\t\t},\n\t\ttoUrl(url) {\n\t\t\twindow.location.href = url;\n\t\t}\n\t}\n};\n</script>\n\n<style scoped lang=\"scss\">\n.tagsCloud {\n\tposition: relative;\n\tdisplay: inline-block;   //为了居中修改了，原属性是 block\n\tmax-width: 100%;\n}\n.item {\n\tposition: absolute;\n\tcursor: pointer;\n\ttext-align: center;\n\ttransform: translate(-50%, -50%);\n\tbackground-color: transparent;\n\toutline: none;\n\t&:hover {\n\t\tborder: 2px solid #666;\n\t}\n}\n</style>\n"]}]}
{"remainingRequest":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/backup/Backup.vue?vue&type=style&index=0&id=047d90b6&lang=less&scoped=true&","dependencies":[{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/backup/Backup.vue","mtime":1645758166694},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1pbnB1dC1ncm91cCB7CiAgICB3aWR0aDogNDAlOwp9Ci5oZWFkZXItbWVudSB7CiAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICBwYWRkaW5nOiA1cHg7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgbWFyZ2luLWJvdHRvbTogNXB4Owp9CgouZm9vdGVyLWJ1dHRvbiB7CiAgICBtYXJnaW4tdG9wOiAxMHB4Owp9CgouYWRkYnRuewogICAgbWFyZ2luLWxlZnQ6IDVweDsKfQo="},{"version":3,"sources":["Backup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Backup.vue","sourceRoot":"src/views/backup","sourcesContent":["<template>\n    <div>\n        <!-- 数据显示 -->\n        <el-table :data=\"studentData\" size=\"mini\" :stripe=\"true\" :highlight-current-row=\"true\">\n            <el-table-column label=\"序号\" type=\"selection\"></el-table-column>\n            <!--       <el-table-column prop=\"id\" label=\"ID\"></el-table-column>-->\n            <!--      <el-table-column prop=\"studentNo\" label=\"学号\" fixed width=\"100\"></el-table-column>-->\n            <el-table-column prop=\"realname\" label=\"姓名\" fixed width=\"100\"></el-table-column>\n            <el-table-column prop=\"username\" label=\"昵称\" ></el-table-column>\n            <!--      <el-table-column prop=\"grade\" label=\"年级\" fixed width=\"100\"></el-table-column>-->\n            <!--      <el-table-column prop=\"classNo\" label=\"班级\" fixed width=\"100\"></el-table-column>-->\n            <el-table-column prop=\"age\" label=\"年龄\" ></el-table-column>\n            <el-table-column prop=\"telephone\" label=\"电话\" ></el-table-column>\n            <el-table-column prop=\"email\" label=\"邮件\" ></el-table-column>\n            <el-table-column prop=\"address\" label=\"地址\"></el-table-column>\n            <el-table-column prop=\"roles\" label=\"权限\">\n                <template slot-scope=\"scope\">\n                    <el-tag type=\"success\">{{scope.row.roles}}</el-tag>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"remark\" label=\"国籍\">\n                <template slot-scope=\"scope\">\n                    <svg-icon style=\"width: 3em;height: 3em;\" :icon-class=\"scope.row.remark\"></svg-icon>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"operation\" label=\"操作\" fixed=\"right\" width=\"180\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"text\" icon=\"el-icon-setting\" size=\"mini\" @click=\"resetById(scope.$index, scope.row)\">重置密码</el-button>\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"deleteById(scope.$index, scope.row)\"></el-button>\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"editById(scope.$index, scope.row)\"></el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        \n    </div>\n</template>\n\n<script>\n    import {add,getUsers,search,modify} from \"@/api/user\";\n    import {get} from \"@/api/group\";\n\n    export default {\n        name: \"UserList\",\n        data() {\n            return {\n                studentData: [],\n                passData:{\n                    spass:''\n                },\n                editFormData: [],\n                addFormdata:{\n                    userId: \"\",\n                    username: \"\",\n                    realname: \"\",\n                    idno: \"\",\n                    description: \"\",\n                    telephone: \"\",\n                    email:\"\",\n                    address: \"\",\n                    age: \"\",\n                    roles:\"normal\"\n                },\n                visiblePassForm: false,\n                visibleAddForm: false,\n                keyword: \"\",\n                page: 1,\n                pageSize: 10,\n                total: 0,\n                value1: \"\", // 年级\n                value2: \"\", // 班级\n                groups:[],\n                visibleForm: false,\n                editFormRules: {\n                    username: [{ required: true, message: \"请输入昵称\", trigger: \"blur\" }],\n                    realname: [{ required: true, message: \"请输入姓名\", trigger: \"blur\" }],\n                    telephone: [{ required: true, message: \"请输入联系电话\", trigger: \"blur\" }],\n                    email: [{ required: true, message: \"请输入邮件\", trigger: \"blur\" }],\n                    address: [{ required: true, message: \"请输入地址\", trigger: \"blur\" }],\n                }\n            };\n        },\n\n        mounted() {\n            this.allStudent();\n            this.getGroup();\n        },\n\n        methods: {\n            getGroup(){\n                get(1,20).then(res=>{\n                    this.groups = res.data.records\n                    console.log(this.groups)\n                })\n            },\n            addStudent() {\n                this.visibleAddForm = true;\n            },\n            addCommit() {\n                console.log(this.addFormdata);\n                add(this.addFormdata)\n                    .then(res => {\n                        if (res.code == 0) {\n                            this.visibleAddForm = false;\n                            this.$message({ message: \"添加用户成功\", type: \"success\" });\n                        }\n                    })\n                    .catch(error => {\n                        this.$message.error(\"添加用户失败\");\n                    });\n            },\n            // 清空年级回到查询所有用户\n            gradeListener() {\n                this.allStudent()\n                this.value2 = ''\n            },\n\n            // 清空班级回到查询所有班级\n            classListener() {\n\n            },\n\n            // 查询班级信息\n            // queryClass() {\n            //   this.$axios\n            //     .get(\"http://localhost:8080/class-grade/\" + this.value1)\n            //     .then(res => {\n            //       let ret = res.data.data\n            //       this.classNo.splice(0, this.classNo.length)\n            //       this.value2 = \"\"\n            //       ret.map(v => {\n            //         this.classNo.push({\n            //           value: v.classNo,\n            //           label: v.className\n            //         });\n            //       });\n            //     })\n            //     .catch(error => {\n            //\n            //     });\n            // },\n\n            // 根据班级查询用户信息\n            // queryStudentByClass() {\n            //   this.$axios\n            //     .get(\n            //       \"http://localhost:8080/student-class/\" + this.page + \"/\" + this.value2\n            //     )\n            //     .then(res => {\n            //       console.log(res)\n            //       if (res.data.code == 0) {\n            //         let ret = res.data.data\n            //         this.studentData = ret.records\n            //         this.total = ret.total\n            //       }\n            //     })\n            //     .catch(error => {\n            //\n            //     });\n            // },\n\n            /***\n             * 编辑提交\n             */\n            commit() {\n                if(this.editFormData.roles == 'admin'){\n                    //验证超级密码\n                    this.visibleForm = false\n                    this.visiblePassForm = true\n                    return ;\n                }\n                this.modifyStudent(this.editFormData)\n            },\n\n            vertifypass(){\n                this.visiblePassForm = false\n                if(this.passData.spass == this.$store.state.user.superpassword){\n                    this.modifyStudent(this.editFormData)\n                }else{\n                    this.$message.error('超级密码错误！')\n                    this.allStudent()\n                }\n            },\n\n            inputListener() {\n                this.allStudent()\n            },\n\n            /**\n             * 查询所有用户\n             */\n            allStudent() {\n                console.log(this.page)\n                getUsers(this.page).then(res => {\n                    let ret = res.data\n                    this.studentData = ret.records\n                    this.total = ret.total\n                    // this.$message({message:'查询成功', type: 'success'})\n                })\n                    .catch(error => {\n                        this.$message.error(\"查询用户列表失败\")\n                    });\n            },\n\n            /**\n             * 关键字查询用户\n             */\n            searchStudent() {\n                search(this.keyword)\n                    .then(res => {\n                        let ret = res.data\n                        this.studentData = ret.records\n                        this.total = ret.total\n                        this.$message({ message: \"查询成功\", type: \"success\" })\n                    })\n                    .catch(error => {\n                        this.$message.error(\"查询失败\")\n                    });\n            },\n\n            resetById(index, row) {\n                this.resetPassword(row.id);\n            },\n\n            resetPassword(id){\n                modify({\"id\":id,\"password\":\"123456\"})\n                    .then(res => {\n                        this.$message({ message: \"重置密码成功\", type: \"success\" });\n                    })\n                    .catch(error => {\n                        this.$message.error(\"重置密码失败\");\n                    });\n            },\n\n            /**\n             * 根据id删除用户\n             */\n            deleteById(index, row) {\n                this.deleteStudentById(row.id)\n            },\n\n            deleteStudentById(id) {\n                modify({\"id\":id, \"deleted\":1})\n                    .then(res => {\n                        this.$message({ message: \"删除成功\", type: \"success\" })\n                        this.allStudent()\n                    })\n                    .catch(error => {\n                        this.$message.error(\"删除失败\")\n                    });\n            },\n\n            /**\n             * 编辑用户\n             */\n            editById(index, row) {\n                let modifyId = row.id\n                this.editFormData = row\n                this.visibleForm = true\n            },\n\n            /**\n             * 更新用户\n             */\n            modifyStudent(modifyData) {\n                modify(modifyData)\n                    .then(res => {\n                        this.$message({ message: \"更新成功\", type: \"success\" })\n                        this.allStudent()\n                        this.visibleForm = false\n                    })\n                    .catch(error => {\n                        this.$message.error(\"更新失败\")\n                    });\n            },\n\n            handleSizeChange() {},\n\n            handleCurrentChange(v) {\n                this.page = v\n                this.allStudent()\n            }\n        }\n    };\n</script>\n\n<style lang=\"less\" scoped>\n    .el-input-group {\n        width: 40%;\n    }\n    .header-menu {\n        margin-bottom: 5px;\n        padding: 5px;\n        text-align: left;\n        margin-bottom: 5px;\n    }\n\n    .footer-button {\n        margin-top: 10px;\n    }\n\n    .addbtn{\n        margin-left: 5px;\n    }\n</style>\n"]}]}
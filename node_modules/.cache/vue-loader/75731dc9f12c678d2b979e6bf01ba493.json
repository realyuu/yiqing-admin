{"remainingRequest":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/Fund/FundList.vue?vue&type=style&index=0&id=a699923a&lang=less&scoped=true&","dependencies":[{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/Fund/FundList.vue","mtime":1619599050511},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_less-loader@5.0.0@less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWlucHV0LWdyb3VwIHsKICB3aWR0aDogNDAlOwp9Ci5oZWFkZXItbWVudSB7CiAgbWFyZ2luLWJvdHRvbTogNXB4OwogIHBhZGRpbmc6IDVweDsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi1ib3R0b206IDVweDsKfQoKLmZvb3Rlci1idXR0b24gewogIG1hcmdpbi10b3A6IDEwcHg7Cn0KCiAgLmFkZGJ0bnsKICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgfQo="},{"version":3,"sources":["FundList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"FundList.vue","sourceRoot":"src/views/Fund","sourcesContent":["<template>\n  <div>\n    <!-- 功能 -->\n    <div class=\"header-menu\">\n      <el-select v-model=\"keyword.group\" placeholder=\"\" >\n        <el-option v-for=\"item in groups\"\n                   :key=\"item.id\" :label=\"item.remark\" :value=\"item.id\">\n        </el-option>\n      </el-select>\n      <el-input placeholder=\"搜索经费明细\" v-model=\"keyword.keyword\" @clear=\"inputListener\" clearable>\n        <el-button slot=\"append\" type=\"primary\" icon=\"el-icon-search\" @click=\"searchStudent\">搜索</el-button>\n      </el-input>\n<!--      <el-button type=\"primary\" @click=\"addStudent()\" class=\"addbtn\">添加</el-button>-->\n    </div>\n    <!-- 数据显示 -->\n    <el-table :data=\"studentData\" size=\"mini\" :stripe=\"true\" :highlight-current-row=\"true\">\n      <el-table-column label=\"序号\" type=\"selection\"></el-table-column>\n      <el-table-column prop=\"groupId\" label=\"工会\" :formatter=\"groupName\"></el-table-column>\n      <el-table-column prop=\"reason\" label=\"经费内容\" ></el-table-column>\n      <el-table-column prop=\"status\" label=\"收支\" :formatter=\"shouzhi\"></el-table-column>\n      <el-table-column prop=\"amount\" label=\"金额\" ></el-table-column>\n      <el-table-column prop=\"createTime\" label=\"创建时间\" ></el-table-column>\n<!--      <el-table-column prop=\"updateTime\" label=\"更新时间\" ></el-table-column>-->\n      <el-table-column prop=\"operation\" label=\"操作\" fixed=\"right\" width=\"180\">\n      <template slot-scope=\"scope\">\n<!--          <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"deleteById(scope.$index, scope.row)\"></el-button>-->\n<!--          <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"editById(scope.$index, scope.row)\"></el-button>-->\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 上一页，当前页，下一页 -->\n    <div class=\"footer-button\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"page\"\n        :page-size=\"pageSize\"\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n      ></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {add,get,search,modify} from \"@/api/fund\";\n  import {get as getG} from \"@/api/group\";\n\n  export default {\n  name: \"FundList\",\n  data() {\n    return {\n      studentData: [],\n      passData:{\n        spass:''\n      },\n      editFormData: [],\n      addFormdata:{\n        userId: \"\",\n        username: \"\",\n        realname: \"\",\n        idno: \"\",\n        description: \"\",\n        telephone: \"\",\n        email:\"\",\n        address: \"\",\n        age: \"\",\n        roles:\"normal\"\n      },\n      festivals:['劳动节','五四青年节','端午节','重阳节','中秋节','国庆节','春节'],\n      groups: [],\n      visiblePassForm: false,\n      visibleAddForm: false,\n      keyword: {\n        group: '',\n        keyword:''\n      },\n      groupQuery: 0,\n      page: 1,\n      pageSize: 10,\n      total: 0,\n      visibleForm: false,\n      editFormRules: {\n        username: [{ required: true, message: \"请输入昵称\", trigger: \"blur\" }],\n        realname: [{ required: true, message: \"请输入姓名\", trigger: \"blur\" }],\n        telephone: [{ required: true, message: \"请输入联系电话\", trigger: \"blur\" }],\n        email: [{ required: true, message: \"请输入邮件\", trigger: \"blur\" }],\n        address: [{ required: true, message: \"请输入地址\", trigger: \"blur\" }],\n      }\n    };\n  },\n\n  mounted() {\n    this.allStudent();\n    this.getGroup();\n  },\n\n  methods: {\n    getGroup(){\n      getG(1,20).then(res=>{\n        this.groups = res.data.records\n        // console.log(this.groups)\n      })\n    },\n    groupName(row, column){\n      let res = this.groups.filter((item, i) => {\n             return item.id == row.groupId;\n         })\n      console.log('res', res)\n      if(res.length>0)\n        return res[0].remark\n      else\n        return '无工会'\n    },\n    shouzhi(row, column){\n      if(row.status==0)\n        return '收入'\n      else\n        return '支出'\n    },\n    addStudent() {\n      this.visibleAddForm = true;\n    },\n    addCommit() {\n      console.log(this.addFormdata);\n      add(this.addFormdata)\n        .then(res => {\n          if (res.code == 0) {\n            this.visibleAddForm = false;\n            this.$message({ message: \"添加成功\", type: \"success\" });\n          }\n        })\n        .catch(error => {\n          this.$message.error(\"添加失败\");\n        });\n    },\n    // 清空年级回到查询所有用户\n    gradeListener() {\n      this.allStudent()\n      this.value2 = ''\n    },\n\n    // 清空班级回到查询所有班级\n    classListener() {\n\n    },\n\n    /***\n     * 编辑提交\n     */\n    commit() {\n      if(this.editFormData.roles == 'admin'){\n        //验证超级密码\n        this.visibleForm = false\n        this.visiblePassForm = true\n        return ;\n      }\n      this.modifyStudent(this.editFormData)\n    },\n\n    inputListener() {\n      this.allStudent()\n    },\n\n    /**\n     * 查询所有用户\n     */\n    allStudent() {\n        console.log(this.page)\n        get(this.page).then(res => {\n          let ret = res.data\n          this.studentData = ret.records\n          this.total = ret.total\n          // this.$message({message:'查询成功', type: 'success'})\n        })\n        .catch(error => {\n          this.$message.error(\"查询用户列表失败\")\n        });\n    },\n\n    /**\n     * 关键字查询用户\n     */\n    searchStudent() {\n      search(this.keyword)\n        .then(res => {\n          let ret = res.data\n          this.studentData = ret.records\n          this.total = ret.total\n          this.$message({ message: \"查询成功\", type: \"success\" })\n        })\n        .catch(error => {\n          this.$message.error(\"查询失败\")\n        });\n    },\n\n    resetById(index, row) {\n      this.resetPassword(row.id);\n    },\n\n    resetPassword(id){\n      modify({\"id\":id,\"password\":\"123456\"})\n        .then(res => {\n          this.$message({ message: \"重置密码成功\", type: \"success\" });\n        })\n        .catch(error => {\n          this.$message.error(\"重置密码失败\");\n        });\n    },\n\n    /**\n     * 根据id删除用户\n     */\n    deleteById(index, row) {\n      this.deleteStudentById(row.id)\n    },\n\n    deleteStudentById(id) {\n      modify({\"id\":id, \"deleted\":1})\n        .then(res => {\n          this.$message({ message: \"删除成功\", type: \"success\" })\n          this.allStudent()\n        })\n        .catch(error => {\n          this.$message.error(\"删除失败\")\n        });\n    },\n\n    /**\n     * 编辑用户\n     */\n    editById(index, row) {\n      let modifyId = row.id\n      this.editFormData = row\n      this.visibleForm = true\n    },\n\n    /**\n     * 更新用户\n     */\n    modifyStudent(modifyData) {\n      modify(modifyData)\n        .then(res => {\n          this.$message({ message: \"更新成功\", type: \"success\" })\n          this.allStudent()\n          this.visibleForm = false\n        })\n        .catch(error => {\n          this.$message.error(\"更新失败\")\n        });\n    },\n\n    handleSizeChange() {},\n\n    handleCurrentChange(v) {\n      this.page = v\n      this.allStudent()\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-input-group {\n  width: 40%;\n}\n.header-menu {\n  margin-bottom: 5px;\n  padding: 5px;\n  text-align: left;\n  margin-bottom: 5px;\n}\n\n.footer-button {\n  margin-top: 10px;\n}\n\n  .addbtn{\n    margin-left: 5px;\n  }\n</style>\n"]}]}
{"remainingRequest":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/dashboard/admin/components/TransactionTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/src/views/dashboard/admin/components/TransactionTable.vue","mtime":1620027143681},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/songyu/IdeaProjects/yiqing-admin-1/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldCB9IGZyb20gJ0AvYXBpL25vdGljZScKY29uc3QgeyBwYXJzZVRpbWUgfSA9IHJlcXVpcmUoJ0AvdXRpbHMnKQoKZXhwb3J0IGRlZmF1bHQgewogIGZpbHRlcnM6IHsKICAgIHN0YXR1c0ZpbHRlcihzdGF0dXMpIHsKICAgICAgY29uc3Qgc3RhdHVzTWFwID0gewogICAgICAgIHN1Y2Nlc3M6ICdzdWNjZXNzJywKICAgICAgICBlcnJvcjogJ2RhbmdlcicsCiAgICAgICAgcnVubmluZzogJ3dhcm5pbmcnLAogICAgICB9CiAgICAgIHJldHVybiBzdGF0dXNNYXBbc3RhdHVzXQogICAgfSwKICAgIHRpbWVzdGFtcEZpbHRlcihzdHIpIHsKICAgICAgcmV0dXJuIHBhcnNlVGltZShzdHIpOwogICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBudWxsLAogICAgICBtb2RhbERhdGE6e30sICAgLy/mqKHmgIHlr7nor53moYbnmoTmlbDmja4KICAgICAgbW9kYWxWaXNpYmxlOiBmYWxzZSwKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpCiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaERhdGEoKSB7CiAgICAgIGdldCgxKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSkKICAgICAgICB0aGlzLmxpc3QgPSByZXNwb25zZS5kYXRhLnJlY29yZHMuc2xpY2UoMCwgNSkKICAgICAgfSkKICAgIH0sCiAgICBvcGVuRGV0YWlscyhyb3cpewogICAgICB0aGlzLm1vZGFsRGF0YSA9IHJvdwogICAgICB0aGlzLm1vZGFsVmlzaWJsZSA9IHRydWUKICAgIH0KICB9Cn0K"},{"version":3,"sources":["TransactionTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TransactionTable.vue","sourceRoot":"src/views/dashboard/admin/components","sourcesContent":["<template>\n  <div>\n    <el-table :data=\"list\" @row-click=\"openDetails\" style=\"width: 100%;padding-top: 15px;\">\n      <el-table-column label=\"通知标题\" min-width=\"200\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.title  }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"时间\" width=\"195\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.createTime  }}\n        </template>\n      </el-table-column>\n      <!--    <el-table-column label=\"状态\" width=\"100\" align=\"center\">-->\n      <!--      <template slot-scope=\"{row}\">-->\n      <!--        <el-tag :type=\"row.status | statusFilter\">-->\n      <!--          {{ row.status }}-->\n      <!--        </el-tag>-->\n      <!--      </template>-->\n      <!--    </el-table-column>-->\n    </el-table>\n\n    <el-dialog title=\"消息\" :visible.sync=\"modalVisible\">\n      <p><span>标题：{{modalData.title}}</span></p>\n      <p> <span>内容：{{modalData.content}}</span></p>\n      <p><span>作者：{{modalData.author}}</span></p>\n      <p><span>时间：{{modalData.createTime}}</span></p>\n      <span slot=\"footer\" class=\"dialog-footer\">\n<!--    <el-button @click=\"modalVisible = false\">取 消</el-button>-->\n      <el-button type=\"primary\" @click=\"modalVisible = false\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { get } from '@/api/notice'\nconst { parseTime } = require('@/utils')\n\nexport default {\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        success: 'success',\n        error: 'danger',\n        running: 'warning',\n      }\n      return statusMap[status]\n    },\n    timestampFilter(str) {\n      return parseTime(str);\n     }\n  },\n  data() {\n    return {\n      list: null,\n      modalData:{},   //模态对话框的数据\n      modalVisible: false,\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      get(1).then(response => {\n        console.log(response)\n        this.list = response.data.records.slice(0, 5)\n      })\n    },\n    openDetails(row){\n      this.modalData = row\n      this.modalVisible = true\n    }\n  }\n}\n</script>\n"]}]}